{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","movieCard","error","invalidUrl","handleChange","event","target","value","name","setState","handleChangeUrl","validationInput","RegExp","test","handleSubmit","preventDefault","trim","addNewMovie","props","addMovie","errors","this","onSubmit","type","onChange","placeholder","disabled","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f99cc9e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    movieCard: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    error: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n      invalidUrl: false,\n    },\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      movieCard: {\n        ...state.movieCard,\n        [name]: value,\n      },\n      error: {\n        ...state.error,\n        [name]: false,\n      },\n    }));\n  };\n\n  handleChangeUrl = (event) => {\n    const { value, name } = event.target;\n    /* eslint-disable-next-line */\n    const validationInput  = new RegExp('^((([A-Za-z]{3,9}:(?://)?)'\n    + '(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|'\n    + '(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)'\n    + '((?:/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)'\n    + '#?(?:[.!/\\\\\\\\w]*))?)$');\n\n    this.setState(state => ({\n      movieCard: {\n        ...state.movieCard,\n        [name]: value,\n      },\n      error: {\n        ...state.error,\n        [name]: false,\n      },\n    }));\n\n    if (!validationInput.test(value)) {\n      this.setState(state => ({\n        error: {\n          ...state.error,\n          [name]: true,\n        },\n      }));\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId } = this.state.movieCard;\n\n    if (!title.trim() || !imgUrl || !imdbUrl || !imdbId.trim()) {\n      this.setState(state => ({\n        error: {\n          ...state.errors,\n          title: !state.movieCard.title.trim(),\n          imgUrl: !state.movieCard.imgUrl,\n          imdbUrl: !state.movieCard.imdbUrl,\n          imdbId: !state.movieCard.imdbId.trim(),\n        },\n      }));\n\n      return;\n    }\n\n    this.setState({\n      movieCard: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      error: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n    });\n\n    const addNewMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(addNewMovie);\n  };\n\n  render() {\n    const { movieCard, error } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <div>Title</div>\n        <input\n          value={movieCard.title}\n          type=\"text\"\n          name=\"title\"\n          onChange={this.handleChange}\n          placeholder=\"write a title\"\n        />\n        <br />\n        {error.title && (\n          <span>\n            Please enter a title\n          </span>\n        )}\n        <br />\n\n        <div>Description</div>\n        <textarea\n          value={movieCard.description}\n          name=\"description\"\n          onChange={this.handleChange}\n          placeholder=\"write a description\"\n        />\n        <br />\n        <br />\n        <div>imgUrl</div>\n        <input\n          type=\"text\"\n          value={movieCard.imgUrl}\n          name=\"imgUrl\"\n          onChange={this.handleChangeUrl}\n          placeholder=\"write a imgUrl\"\n        />\n        <br />\n        {error.imgUrl && (\n          <span>\n            Please enter correct imgUrl\n          </span>\n        )}\n        <br />\n        <div>imdbUrl</div>\n        <input\n          value={movieCard.imdbUrl}\n          type=\"text\"\n          name=\"imdbUrl\"\n          onChange={this.handleChangeUrl}\n          placeholder=\"write a imdbUrl\"\n        />\n        <br />\n        {error.imdbUrl && (\n          <span>\n            Please enter correct imdbUrl\n          </span>\n        )}\n        <br />\n        <div>imdbId</div>\n        <input\n          value={movieCard.imdbId}\n          type=\"text\"\n          name=\"imdbId\"\n          onChange={this.handleChange}\n          placeholder=\"write a imdbId\"\n        />\n        <br />\n        {error.imdbId && (\n          <span>\n            Please enter a imdbId\n          </span>\n        )}\n        <br />\n\n        <button\n          type=\"submit\"\n          disabled={error.imgUrl || error.imdbUrl}\n        >\n          Add movie\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}