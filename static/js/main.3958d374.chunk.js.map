{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","validationInput","RegExp","test","addNewMovie","props","addMovie","this","onSubmit","type","onChange","placeholder","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3958d374.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: '',\n    imgUrlError: '',\n    imdbUrlError: '',\n    imdbIdError: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      titleError: '',\n      imgUrlError: '',\n      imdbUrlError: '',\n      imdbIdError: '',\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    // eslint-disable-next-line max-len\n    const validationInput = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    switch (true) {\n      case !title:\n        this.setState({\n          titleError: 'Please enter correct title',\n        });\n\n        return;\n\n      case !validationInput.test(imgUrl):\n        this.setState({\n          imgUrlError: 'Please enter correct imgUrl',\n        });\n\n        return;\n\n      case !validationInput.test(imdbUrl):\n        this.setState({\n          imdbUrlError: 'Please enter correct imdbUrl',\n        });\n\n        return;\n\n      case !validationInput.test(imdbId):\n        this.setState({\n          imdbIdError: 'Please enter correct imdbId',\n        });\n\n        return;\n      default:\n        break;\n    }\n\n    const addNewMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(addNewMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    return (\n      <>\n        <h1>Add a movie to your collection</h1>\n        <form\n          onSubmit={this.handleSubmit}\n        >\n          <div>Title</div>\n          <input\n            value={title}\n            type=\"text\"\n            name=\"title\"\n            onChange={this.handleChange}\n            placeholder=\"write a title\"\n          />\n          <span>{titleError}</span>\n\n          <div>Description</div>\n          <textarea\n            value={description}\n            name=\"description\"\n            onChange={this.handleChange}\n            placeholder=\"write a description\"\n          />\n          <div>imgUrl</div>\n          <input\n            type=\"text\"\n            value={imgUrl}\n            name=\"imgUrl\"\n            onChange={this.handleChange}\n            placeholder=\"write a imgUrl\"\n          />\n\n          <span>{imgUrlError}</span>\n          <div>imdbUrl</div>\n          <input\n            value={imdbUrl}\n            type=\"text\"\n            name=\"imdbUrl\"\n            onChange={this.handleChange}\n            placeholder=\"write a imdbUrl\"\n          />\n          <span>{imdbUrlError}</span>\n          <div>imdbId</div>\n          <input\n            value={imdbId}\n            type=\"text\"\n            name=\"imdbId\"\n            onChange={this.handleChange}\n            placeholder=\"write a imdbId\"\n          />\n          <span>{imdbIdError}</span>\n          <div />\n          <button\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}